% YAML 1.1
nlopt:
  type: local  #  nlopt has global methods, but we don't support right now (chang to 'mixed' if we ever do)
  methods:
    LN_SBPLX:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    LN_BOBYQA:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    LN_COBYLA:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    LN_NEWUOA:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    LN_NELDERMEAD:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    LD_MMA:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
        - grad
dfols:
  type: local
  methods:
    dfols:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
        - fvec
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
          - ['fvec', float, components]
scipy:
  type: local  #  scipy has global methods, but we don't support right now (chang to 'mixed' if we ever do)
  methods:
    scipy_Nelder-Mead:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    scipy_COBYLA:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
    scipy_BFGS:
      aposmm_support: True
      local_support: True
      persis_in:
        - f
        - grad
dlib:
  type: global
  methods:
    dlib:
      aposmm_support: False
      local_support: False
      persis_in:
        - f
        - sim_id
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
pysot:
  type: global
  methods:
    pysot:
      aposmm_support: False
      local_support: False
      persis_in:
        - f
        - sim_id
      sim_specs:
        in: ['x']
        out:
          - ['f', float]
aposmm:
  type: global
  methods:  # aposmm uses other software and methods. AposmmOptimizer checks for aposmm_support and handles config.
mobo:
  type: global
  methods:
    mobo:
      aposmm_support: False
      local_support: False
      persis_in:
        - f
        - c
      sim_specs:
        in: ['x']
        out:
          - ['f', float, objectives]
          - ['c', float, constraints]